[{"path":"https://f-dallolio.github.io/butlerrr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 butlerrr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://f-dallolio.github.io/butlerrr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Filippo Dall Olio. Author, maintainer.","code":""},{"path":"https://f-dallolio.github.io/butlerrr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dall Olio F (2024). butlerrr: Package (One Line, Title Case). R package version 0.0.0.9000, https://f-dallolio.github.io/butlerrr/, https://github.com/f-dallolio/butlerrr.","code":"@Manual{,   title = {butlerrr: What the Package Does (One Line, Title Case)},   author = {Filippo {Dall Olio}},   year = {2024},   note = {R package version 0.0.0.9000, https://f-dallolio.github.io/butlerrr/},   url = {https://github.com/f-dallolio/butlerrr}, }"},{"path":"https://f-dallolio.github.io/butlerrr/index.html","id":"butlerrr","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal butlerrr …","code":""},{"path":"https://f-dallolio.github.io/butlerrr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version butlerrr GitHub :","code":"# install.packages(\"pak\") pak::pak(\"f-dallolio/butlerrr\")"},{"path":"https://f-dallolio.github.io/butlerrr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"basic example shows solve common problem:","code":"library(butlerrr) ## basic example code"},{"path":"https://f-dallolio.github.io/butlerrr/reference/as_function2.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to function — as_function2","title":"Convert to function — as_function2","text":"as_function2 extension rlang::as_function transforms one-sided formula function powers lambda syntax. main difference also accepts string input includes namespace definition (e.g. \"pkg::fn\" \"pkg:::fn\").","code":""},{"path":"https://f-dallolio.github.io/butlerrr/reference/as_function2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to function — as_function2","text":"","code":"as_function2(   x,   env = global_env(),   ...,   arg = caller_arg(x),   call = caller_env() )"},{"path":"https://f-dallolio.github.io/butlerrr/reference/as_function2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to function — as_function2","text":"x function, formula, string. function, used . formula, e.g. ~ .x + 2, converted function two arguments: .x (single argument) .x .y (two arguments). . placeholder can used instead .x. allows create compact anonymous functions (lambdas) two inputs. Functions created formulas special class. Use is_lambda() test . string, function looked env. Note interface strictly user convenience scoping issues involved. Package developers avoid supplying functions name instead supply value. Unlike rlang::as_function, as_function2() also accepts string input includes namespace definition (e.g. \"pkg::fn\" \"pkg:::fn\"). passed base::str2lang evaluated env. env Environment fetch function case x string.","code":""},{"path":"https://f-dallolio.github.io/butlerrr/reference/as_function2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to function — as_function2","text":"","code":"f <- as_function(~ .x + 1) #> Error in as_function(~.x + 1): could not find function \"as_function\" f(10) #> Error in f(10): could not find function \"f\"  g <- as_function(~ -1 * .) #> Error in as_function(~-1 * .): could not find function \"as_function\" g(4) #> Error in g(4): could not find function \"g\"  h <- as_function(~ .x - .y) #> Error in as_function(~.x - .y): could not find function \"as_function\" h(6, 3) #> Error in h(6, 3): could not find function \"h\"  as_function(\"mean\") #> Error in as_function(\"mean\"): could not find function \"as_function\" as_function2(\"mean\") #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x55efc1b84c40> #> <environment: namespace:base>  as_function(\"base::mean\") #> Error in as_function(\"base::mean\"): could not find function \"as_function\" as_function2(\"base::mean\") #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x55efc1b84c40> #> <environment: namespace:base>  # Functions created from a formula have a special class: is_lambda(f) #> Error in is_lambda(f): could not find function \"is_lambda\" is_lambda(as_function(function() \"foo\")) #> Error in is_lambda(as_function(function() \"foo\")): could not find function \"is_lambda\""},{"path":"https://f-dallolio.github.io/butlerrr/reference/butlerrr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"butlerrr: What the Package Does (One Line, Title Case) — butlerrr-package","title":"butlerrr: What the Package Does (One Line, Title Case) — butlerrr-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://f-dallolio.github.io/butlerrr/reference/butlerrr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"butlerrr: What the Package Does (One Line, Title Case) — butlerrr-package","text":"Maintainer: Filippo Dall Olio fdallolio@brocku.ca","code":""},{"path":"https://f-dallolio.github.io/butlerrr/reference/fn-name.html","id":null,"dir":"Reference","previous_headings":"","what":"Function(s) Name(s) — fn-name","title":"Function(s) Name(s) — fn-name","text":"Function(s) Name(s)","code":""},{"path":"https://f-dallolio.github.io/butlerrr/reference/fn-name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function(s) Name(s) — fn-name","text":"","code":"fn_name(x, ..., env = global_env())  fn_name0(x, ..., env = global_env())  fn_name2(x, ..., env = global_env())  fn_names(..., env = global_env())  fn_names0(..., env = global_env())  fn_names2(..., env = global_env())"},{"path":"https://f-dallolio.github.io/butlerrr/reference/fn-name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function(s) Name(s) — fn-name","text":"x function, formula, string (passed list . Unlike rlang::as_function, also accepts strings indicating function names including namespace (.e. :: :::). env Environment fetch function.","code":""},{"path":"https://f-dallolio.github.io/butlerrr/reference/fn-name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function(s) Name(s) — fn-name","text":"string character vector. fn_name returns simple name function(s) exported namespace function environment package namespace. , name function reported form \"pkg:::fn\". fn_name0 always returns function name. fn_name2 always returns function name form \"pkg::fn\" function exported object \"pkg:::fn\" .","code":""},{"path":"https://f-dallolio.github.io/butlerrr/reference/fn-name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function(s) Name(s) — fn-name","text":"","code":"fn1 <- function(x) x fn2 <- base::mean fn3 <- rlang:::call_add_namespace  fn_name(fn1) #> Error in ns_env(.x): `x` must be a package name or a function inheriting from a namespace, #> not an environment. fn_name(fn2) #> [1] \"mean\" fn_name(fn3) #> [1] \"rlang:::call_add_namespace\"  fn_name0(fn1) #> Error in ns_env(.x): `x` must be a package name or a function inheriting from a namespace, #> not an environment. fn_name0(fn2) #> [1] \"mean\" fn_name0(fn3) #> [1] \"call_add_namespace\"  fn_name0(fn1) #> Error in ns_env(.x): `x` must be a package name or a function inheriting from a namespace, #> not an environment. fn_name0(fn2) #> [1] \"mean\" fn_name0(fn3) #> [1] \"call_add_namespace\""}]
