% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fn_name.R
\name{fn-name}
\alias{fn-name}
\alias{fn_name}
\alias{fn_name0}
\alias{fn_name2}
\alias{fn_names}
\alias{fn_names0}
\alias{fn_names2}
\title{Function(s) Name(s)}
\usage{
fn_name(x, ..., env = global_env())

fn_name0(x, ..., env = global_env())

fn_name2(x, ..., env = global_env())

fn_names(..., env = global_env())

fn_names0(..., env = global_env())

fn_names2(..., env = global_env())
}
\arguments{
\item{x}{A function, a formula, a string (passed to
or a list of these. Unlike
\code{\link[rlang:as_function]{rlang::as_function}}, it also accepts a strings indicating function
names including namespace (i.e. with \code{::} or \code{:::}).}

\item{env}{Environment in which to fetch the function.}
}
\value{
A string or a character vector.

\link{fn_name} returns the simple name of the function(s) if it is exported from
its namespace or the function environment is not a package namespace. If
not, the name of the function is reported in the form
"pkg:::fn".

\link{fn_name0} always returns only the function name.

\link{fn_name2} always returns the function name in the form
"pkg::fn" if the function is an exported object and "pkg:::fn" if not.
}
\description{
Function(s) Name(s)
}
\examples{
fn1 <- function(x) x
fn2 <- base::mean
fn3 <- rlang:::call_add_namespace

fn_name(fn1)
fn_name(fn2)
fn_name(fn3)

fn_name0(fn1)
fn_name0(fn2)
fn_name0(fn3)

fn_name0(fn1)
fn_name0(fn2)
fn_name0(fn3)
}
